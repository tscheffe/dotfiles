#!/usr/bin/env zsh
# vi: ft=zsh

# A script to make using 256 colors in zsh less painful.
# Copied from https://github.com/robbyrussell/oh-my-zsh/blob/master/lib/spectrum.zsh
# TODO: Do we want "graceful degredation" for impoverished terminals which they do here:
#   https://github.com/sykora/etc/blob/master/zsh/functions/spectrum/ ?

typeset -Ag FX FG BG

FX=(
    reset     "%{[00m%}"
    bold      "%{[01m%}" no-bold      "%{[22m%}"
    italic    "%{[03m%}" no-italic    "%{[23m%}"
    underline "%{[04m%}" no-underline "%{[24m%}"
    blink     "%{[05m%}" no-blink     "%{[25m%}"
    reverse   "%{[07m%}" no-reverse   "%{[27m%}"
)

function initialize_fg_bg_colors() {
  local color;
  for color in {000..255}; do
      FG[$color]="%{[38;5;${color}m%}"
      BG[$color]="%{[48;5;${color}m%}"
  done
}

initialize_fg_bg_colors


# Show all 256 colors with color number
function spectrum_ls() {
  local zsh_spectrum_text=${zsh_spectrum_text:-Arma virumque cano Troiae qui primus ab oris}

  for code in {000..255}; do
    print -P -- "$code: %F{$code}$zsh_spectrum_text%f"
  done
}

# Show all 256 colors where the background is set to specific color
function spectrum_bls() {
  local zsh_spectrum_text=${zsh_spectrum_text:-Arma virumque cano Troiae qui primus ab oris}

  for code in {000..255}; do
    print -P -- "$BG[$code]$code: $zsh_spectrum_text %{$reset_color%}"
  done
}
