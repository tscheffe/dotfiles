#!/usr/bin/env zsh
# vi: ft=zsh

function usage() {
  echo "
usage: psql_me -u username -v environment
  repo is the name of the repository database you want to connect to, e.g. members_api (required)
  environment is the environment you want to connect to, e.g. development (default), staging or production

General options:
  -v verbose, when passed will print connection string to terminal
  -u username, username to SSH to staging/production server as, defaults to your system user
  -X Dry Run, doesn't run psql "
}

function dev_database_url() {
  local dirty_db_url=`egrep -o 'DATABASE_URL=(.*)' ./development.env \
    | sed s/^DATABASE_URL=//`
  local database_url=${dirty_db_url%\?*}

  echo $database_url
}

function ssh_for_database_url() {
  local tc_env=$1
  local repo=$2
  local user=$3

  if [[ "$tc_env" == "production" ]]; then
    local env_pre="prd"
  else
    local env_pre="stg"
  fi

  local server=`ack -o -m1 --match "(app|prx)\d+\.$env_pre\.aws\d+\.trunkclub\.systems" ./Capfile`

  local env_dat=$(ssh -T $user$server << EOF
    sudo -u deployer -i
    cat /var/app/$repo/$tc_env.env
EOF
  )

  local database_url=`echo "$env_dat" \
    | grep '\bDATABASE_URL' \
    | egrep -o 'DATABASE_URL=(.*)' \
    | sed -E 's/DATABASE_URL=(jdbc:)?//' \
    | sed -E 's/^(postgresql:\/\/)(.*)\?.*user=([^&]+).*&password=([^&]+).*$/\1\3:\4@\2/'`

  echo $database_url
}

function psql_me() {
  while getopts :u:vX opt; do
    case $opt in
      u)
        local tc_ssh_user="$OPTARG"
        ;;
      v)
        local echo_verbose=1
        ;;
      X)
        local dry_run=1
        ;;
      \?)
        echo 1>&2 "Invalid option: -$OPTARG"
        usage
        return 1
        ;;
      :)
        echo 1>&2 "Option -$OPTARG requires an argument"
        usage
        return 1
        ;;
    esac
  done
  shift "$((OPTIND-1))"

  if [[ -n $1 ]]; then
    local tc_env=$1
  else
    local tc_env="development"
  fi

  # Parameter expansion of current directory that strips everything before the last `/`
  #   ex: /Users/me/dev/workspace -> workspace
  local repo="${PWD##*/}"

  echo "Running psql for $repo ($tc_env)"

  if [[ "$tc_env" == "development" ]]; then
    local db_url=$(dev_database_url)
  else
    if [[ -n "$tc_ssh_user" ]]; then
      local ssh_user="$tc_ssh_user@"
    else
      local ssh_user=$tc_ssh_user
    fi

    local db_url=`ssh_for_database_url $tc_env $repo $ssh_user`
  fi

  if [[ "$tc_env" == "production" ]]; then
    echo "*** YOU ARE CONNECTING TO A PRODUCTION DATABASE, EXERCISE GOOD JUDGEMENT ***"
    echo "!!! FOR SERIOUS, DON'T GET YOURSELF FIRED !!!"
  fi
  if [[ -n "$echo_verbose" ]]; then
    echo "Connecting to $db_url"
  fi

  if [[ -z "$dry_run" ]]; then
    psql $db_url
  fi
}

psql_me "$@"
