#!/usr/bin/env zsh
# vi: ft=zsh

# With <3 from http://stackoverflow.com/a/15135004/2675529, for use with
# https://saintgimp.org/2013/01/22/merging-two-git-repositories-into-one-repository-without-losing-file-history/
function historical_git_mv() {
  function usage() {
    echo 1>&2
    echo 1>&2 "Usage:"
    echo 1>&2 "  historical_git_mv DESTINATION SOURCE # For a file"
    echo 1>&2 "  historical_git_mv DESTINATION dir1 dir2 dir3 ... # For one or more directories"
  }

  local failure

  local destination="$1"
  if [[ -z "$destination" ]] && [[ -d "$destination" ]]; then
    echo 1>&2 "Must specify DESTINATION directory"
    failure=true
  fi

  local source="$2"
  if [[ -z "$source" ]]; then
    echo 1>&2 "Must specify SOURCE file"
    failure=true
  fi

  if [[ "$failure" ]]; then
    usage
    return 1
  fi

  if [[ -d "$source" ]]; then
    local destination="$1"
    shift 1

    # TODO: Test again now that the $destination isn't hardcoded
    for dir in "$@"; do
      git filter-branch --tree-filter --force --prune-empty \
        "if [ -d $dir ]; then mkdir -p $destination && mv $dir/ $destination/; fi" \
        HEAD
    done
  elif [[ -f "$source" ]]; then
    git filter-branch --tree-filter \
      "if [ -f $source ]; then mkdir -p $destination && mv $source $destination; fi" \
      HEAD
  fi
}
