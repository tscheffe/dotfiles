#!/usr/bin/env zsh
# vi: ft=zsh

# Delete branchs which have already been merged into master
#   Source: http://stevenharman.net/git-clean-delete-already-merged-branches
#   Another Source: with a ton of info:
#     http://stackoverflow.com/questions/13064613/how-to-prune-local-tracking-branches-that-do-not-exist-on-remote-anymore
function git_branch_delete_merged() {
  # Delete local branches that have been merged
  git branch --merged master \
    | grep -v "\* master" \
    | xargs -n 1 git branch -d

  # Snazzy alternative way to delete branches, though probably outdated:
  #   git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d

  # Prune refs
  git remote prune origin
}

