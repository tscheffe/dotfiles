#!/usr/bin/env ruby
# vim: ft=ruby

require File.join('~', '.dotfiles', 'ruby', 'lib', 'images_helper')

module SortImagesFromInfo

  include ImagesHelper::Constants

  def self.perform(args:)
    images = ImagesHelper.all_images_in_dir('.')

    info_path = args[0]

    if !info_path || !File.exist?(info_path)
      warn 'Must profile info file path'
      exit 1
    end

    info_lines = File.readlines(info_path).map(&:chomp)

    image_matcher = /\AImage (?<new_name>\d{1,3}): (?<old_name>[\(\)\ \.\_a-z0-9]*)\.jpg/

    images_to_move = info_lines.each_with_object([]) do |line, memo|
      image = {}
      line.match(image_matcher) do |match|
        image[:old_name] = match[:old_name] + '.jpg'
        image[:new_name] = match[:new_name] + '.jpg'
      end

      memo << image if image[:old_name]
    end

    puts "Found #{images_to_move.length} images to move"

    rjust_length = images_to_move.length.to_s.length
    puts "Minimum length set to #{rjust_length}"

    images_to_move.each do |image|
      next unless File.exist?(image[:old_name])

      rjust_new_name = image[:new_name].rjust(rjust_length, '0')

      next if image[:old_name] == rjust_new_name

      puts "Moving #{image[:old_name]} to #{rjust_new_name}"
      FileUtils.mv(image[:old_name], rjust_new_name)
    end
  end

end

SortImagesFromInfo.perform(args: ARGV)
