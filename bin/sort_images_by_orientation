#!/usr/bin/env ruby
# vim: ft=ruby

require File.join(__dir__, '..', 'ruby', 'lib', 'images_helper')

module SortImagesByOrientation

  include ImagesHelper::Constants

  def self.perform(args:)
    working_dir = args[0]
    if working_dir.blank? || !Dir.exist?(working_dir)
      puts "Working Dir: '#{working_dir}' not found, defaulting to current working directory"
      working_dir = Dir.pwd
    end

    landscape_dir = File.join(working_dir, LANDSCAPE_DIR)
    FileUtils.mkdir_p(landscape_dir)
    portrait_dir = File.join(working_dir, PORTRAIT_DIR)
    FileUtils.mkdir_p(portrait_dir)
    images = ImagesHelper.all_images_in_dir(working_dir)

    landscape, portrait = images.partition do |img|
      begin
        width, height = Dimensions.dimensions(img)

        width > height
      rescue StandardError => e
        puts "File #{img} failed with error #{e}"

        true
      end
    end

    puts 'Moving landscape files:'
    puts landscape.to_s
    begin
      FileUtils.mv(landscape, landscape_dir)
    rescue StandardError => e
      puts "Failed to move landscape files with error #{e}"
    end

    puts 'Moving portrait files:'
    puts portrait.to_s

    begin
      FileUtils.mv(portrait, portrait_dir)
    rescue StandardError => e
      puts "Failed to move portrait files with error #{e}"
    end
  end

end

# Run this script directly only when it hasn't been loaded by another
if File.basename($PROGRAM_NAME) == File.basename(__FILE__)
  SortImagesByOrientation.perform(args: ARGV)
end
