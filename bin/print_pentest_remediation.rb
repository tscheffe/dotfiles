require 'json'
require 'csv'
require 'active_support'
require 'active_support/core_ext/object/blank'

module PrintPentestRemediation
  def self.perform(args:)
    json_file = args[0]

    raise "Must pass a file to convert" if json_file.blank?
    raise "File to convert '#{json_file}' is not a json file" if !json_file.end_with?(".json")
    raise "File to convert '#{json_file}' does not exist" if !File.exist?(json_file)

    puts "good to go"

    raw_contents = File.read(json_file)
    issues = JSON.parse(raw_contents)

    print_consul_info(issues: issues)
    # puts "Transformed to json at '#{output_file}'"

    print
  end

  def self.print_consul_info(issues:)
    puts "-----Consul Issue-----"
    puts "ID: IH03"
    consul_issues = issues.select { |issue| issue.fetch('id') == 'IH03' }
    puts "Issue Count: #{issues.length}"
    hosts = consul_issues
      .flat_map { |issue| issue.fetch('host_name').split(' ') }
      .reject { |name| name != 'AND' }
    puts "Hosts:"
    hosts.each do |host|
      puts "  #{host}"
    end

  end
  private_class_method :print_consul_info

  def self.print_elasticsearch_info(contents:)

  end
  private_class_method :print_elasticsearch_info

end

PrintPentestRemediation.perform(args: ARGV)
